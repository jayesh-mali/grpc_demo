// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.protobuftest.models.v1

@SerialVersionUID(0L)
final case class UserResponse(
    id: _root_.scala.Int = 0,
    firstName: _root_.scala.Predef.String = "",
    lastName: _root_.scala.Predef.String = "",
    age: _root_.scala.Int = 0,
    address: _root_.scala.Option[com.protobuftest.models.v1.UserResponse.Address] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[UserResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = firstName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = lastName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = age
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      if (address.isDefined) {
        val __value = address.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = firstName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = lastName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = age
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      address.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Int): UserResponse = copy(id = __v)
    def withFirstName(__v: _root_.scala.Predef.String): UserResponse = copy(firstName = __v)
    def withLastName(__v: _root_.scala.Predef.String): UserResponse = copy(lastName = __v)
    def withAge(__v: _root_.scala.Int): UserResponse = copy(age = __v)
    def getAddress: com.protobuftest.models.v1.UserResponse.Address = address.getOrElse(com.protobuftest.models.v1.UserResponse.Address.defaultInstance)
    def clearAddress: UserResponse = copy(address = _root_.scala.None)
    def withAddress(__v: com.protobuftest.models.v1.UserResponse.Address): UserResponse = copy(address = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = firstName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = lastName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = age
          if (__t != 0) __t else null
        }
        case 6 => address.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(id)
        case 2 => _root_.scalapb.descriptors.PString(firstName)
        case 3 => _root_.scalapb.descriptors.PString(lastName)
        case 4 => _root_.scalapb.descriptors.PInt(age)
        case 6 => address.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.protobuftest.models.v1.UserResponse.type = com.protobuftest.models.v1.UserResponse
    // @@protoc_insertion_point(GeneratedMessage[UserResponse])
}

object UserResponse extends scalapb.GeneratedMessageCompanion[com.protobuftest.models.v1.UserResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.protobuftest.models.v1.UserResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.protobuftest.models.v1.UserResponse = {
    var __id: _root_.scala.Int = 0
    var __firstName: _root_.scala.Predef.String = ""
    var __lastName: _root_.scala.Predef.String = ""
    var __age: _root_.scala.Int = 0
    var __address: _root_.scala.Option[com.protobuftest.models.v1.UserResponse.Address] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __id = _input__.readInt32()
        case 18 =>
          __firstName = _input__.readStringRequireUtf8()
        case 26 =>
          __lastName = _input__.readStringRequireUtf8()
        case 32 =>
          __age = _input__.readInt32()
        case 50 =>
          __address = Option(__address.fold(_root_.scalapb.LiteParser.readMessage[com.protobuftest.models.v1.UserResponse.Address](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.protobuftest.models.v1.UserResponse(
        id = __id,
        firstName = __firstName,
        lastName = __lastName,
        age = __age,
        address = __address,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.protobuftest.models.v1.UserResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.protobuftest.models.v1.UserResponse(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        firstName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        lastName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        age = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        address = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.protobuftest.models.v1.UserResponse.Address]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = com.protobuftest.models.v1.UserResponse.Address
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.protobuftest.models.v1.UserResponse.Address
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.protobuftest.models.v1.UserResponse(
    id = 0,
    firstName = "",
    lastName = "",
    age = 0,
    address = _root_.scala.None
  )
  @SerialVersionUID(0L)
  final case class Address(
      country: _root_.scala.Predef.String = "",
      region: _root_.scala.Predef.String = "",
      city: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Address] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = country
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = region
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = city
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = country
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = region
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = city
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withCountry(__v: _root_.scala.Predef.String): Address = copy(country = __v)
      def withRegion(__v: _root_.scala.Predef.String): Address = copy(region = __v)
      def withCity(__v: _root_.scala.Predef.String): Address = copy(city = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = country
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = region
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = city
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(country)
          case 2 => _root_.scalapb.descriptors.PString(region)
          case 3 => _root_.scalapb.descriptors.PString(city)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.protobuftest.models.v1.UserResponse.Address.type = com.protobuftest.models.v1.UserResponse.Address
      // @@protoc_insertion_point(GeneratedMessage[UserResponse.Address])
  }
  
  object Address extends scalapb.GeneratedMessageCompanion[com.protobuftest.models.v1.UserResponse.Address] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.protobuftest.models.v1.UserResponse.Address] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.protobuftest.models.v1.UserResponse.Address = {
      var __country: _root_.scala.Predef.String = ""
      var __region: _root_.scala.Predef.String = ""
      var __city: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __country = _input__.readStringRequireUtf8()
          case 18 =>
            __region = _input__.readStringRequireUtf8()
          case 26 =>
            __city = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.protobuftest.models.v1.UserResponse.Address(
          country = __country,
          region = __region,
          city = __city,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.protobuftest.models.v1.UserResponse.Address] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.protobuftest.models.v1.UserResponse.Address(
          country = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          region = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          city = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.protobuftest.models.v1.UserResponse.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.protobuftest.models.v1.UserResponse.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.protobuftest.models.v1.UserResponse.Address(
      country = "",
      region = "",
      city = ""
    )
    implicit class AddressLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.protobuftest.models.v1.UserResponse.Address]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.protobuftest.models.v1.UserResponse.Address](_l) {
      def country: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.country)((c_, f_) => c_.copy(country = f_))
      def region: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.region)((c_, f_) => c_.copy(region = f_))
      def city: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.city)((c_, f_) => c_.copy(city = f_))
    }
    final val COUNTRY_FIELD_NUMBER = 1
    final val REGION_FIELD_NUMBER = 2
    final val CITY_FIELD_NUMBER = 3
    def of(
      country: _root_.scala.Predef.String,
      region: _root_.scala.Predef.String,
      city: _root_.scala.Predef.String
    ): _root_.com.protobuftest.models.v1.UserResponse.Address = _root_.com.protobuftest.models.v1.UserResponse.Address(
      country,
      region,
      city
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[UserResponse.Address])
  }
  
  implicit class UserResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.protobuftest.models.v1.UserResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.protobuftest.models.v1.UserResponse](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def firstName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstName)((c_, f_) => c_.copy(firstName = f_))
    def lastName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.lastName)((c_, f_) => c_.copy(lastName = f_))
    def age: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.age)((c_, f_) => c_.copy(age = f_))
    def address: _root_.scalapb.lenses.Lens[UpperPB, com.protobuftest.models.v1.UserResponse.Address] = field(_.getAddress)((c_, f_) => c_.copy(address = Option(f_)))
    def optionalAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.protobuftest.models.v1.UserResponse.Address]] = field(_.address)((c_, f_) => c_.copy(address = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val FIRSTNAME_FIELD_NUMBER = 2
  final val LASTNAME_FIELD_NUMBER = 3
  final val AGE_FIELD_NUMBER = 4
  final val ADDRESS_FIELD_NUMBER = 6
  def of(
    id: _root_.scala.Int,
    firstName: _root_.scala.Predef.String,
    lastName: _root_.scala.Predef.String,
    age: _root_.scala.Int,
    address: _root_.scala.Option[com.protobuftest.models.v1.UserResponse.Address]
  ): _root_.com.protobuftest.models.v1.UserResponse = _root_.com.protobuftest.models.v1.UserResponse(
    id,
    firstName,
    lastName,
    age,
    address
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[UserResponse])
}
